version: '3'
services:
  #PHP Service
  php:
    build:
      context: .
      dockerfile: ./docker-data/Dockerfile
    image: php:7.4.6-fpm
    container_name: php
    command: sh -c "chown user -R /var/www && chmod 775 -R /var/www && php-fpm"
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker-data/php:/usr/local/etc/php/conf.d
      - ./docker-data/php-fpm.d:/usr/local/etc/php-fpm.d
    networks:
      - app-network

  #Nginx Service
  nginx:
    image: nginx:alpine
    container_name: test-nginx
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
    volumes:
      - ./:/var/www
      - ./docker-data/nginx:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  mysql:
    image: mysql:8.0.19
    container_name: mysql
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: testing
      MYSQL_ROOT_PASSWORD: 12345
    networks:
      - app-network

  #phpMyAdmin
  phpMyAdmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - 3306:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: 12345
    networks:
      - app-network
    external_links:
      - mysql:db

  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      - app-network
    ports:
      - 9200:9200
  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    networks:
      - app-network
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

#Docker Networks
networks:
  app-network:
    driver: bridge
